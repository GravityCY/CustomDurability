plugins {
    id "fabric-loom" version "1.3-SNAPSHOT"
    id "maven-publish"
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = "me.gravityio"

project.dependencies.add("minecraft", "com.mojang:minecraft:${project.minecraft_version}")
project.dependencies.add("mappings", "net.fabricmc:yarn:${project.project.yarn_version}:v2")
project.dependencies.add("modImplementation", "net.fabricmc:fabric-loader:${project.loader_version}")

modrinth {
    token = System.getenv("MODRINTH_UPLOAD")
    projectId = project.mod_id
    versionName = project.mod_name + " " + project.mod_version
    versionNumber = project.mod_version
    versionType = "release"
    uploadFile = remapJar
    gameVersions = ["1.19.4"]
    loaders = ["fabric"]
    dependencies {
        required.project "fabric-api"
        required.project "yacl"
        optional.project "modmenu"
    }
}

repositories {
    mavenLocal()
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url = "https://maven.quiltmc.org/repository/release" }
    maven { url = "https://maven.terraformersmc.com/" } // Mod Menu
    maven {
        name 'Xander Maven'
        url 'https://maven.isxander.dev/releases'
    }
    maven {
        url = "https://api.modrinth.com/maven"
        name = "Modrinth"
        content {
            includeGroup("maven.modrinth")
        }
    }
    maven { url = "https://jitpack.io"	}
}

dependencies {
    modImplementation "net.fabricmc.fabric-api:fabric-api:$project.fabric_version"
    // Mod Menu
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    // Mixin Extras
    implementation("com.github.LlamaLad7:MixinExtras:0.1.1")
    annotationProcessor("com.github.LlamaLad7:MixinExtras:0.1.1")
    include("com.github.LlamaLad7:MixinExtras:0.1.1")
}

base {
    archivesName = project.mod_id
}

processResources  {
    def modProperties = [
            "mod_id": project.mod_id,
            "mod_name": project.mod_name,
            "mod_version": project.mod_version,
            "mod_description": project.mod_description,
            "mod_author": project.mod_author,
            "mod_sources": project.mod_sources,
            "mod_license": project.mod_license,
            "loader_version": project.loader_version,
            "minecraft_version": project.minecraft_version
    ]

    inputs.properties(modProperties)

    filesMatching("fabric.mod.json") {
        expand modProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {}
}