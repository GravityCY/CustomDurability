import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id "fabric-loom" version "1.6-SNAPSHOT"
    id "maven-publish"
    id "com.modrinth.minotaur" version "2.+"
    id 'net.darkhax.curseforgegradle' version '1.1.23'
}

def changelog = file("CHANGELOG.md").text

version = project.mod_version
group = "me.gravityio"

project.dependencies.add("minecraft", "com.mojang:minecraft:${project.minecraft_version}")
project.dependencies.add("mappings", "net.fabricmc:yarn:${project.project.yarn_version}:v2")
project.dependencies.add("modImplementation", "net.fabricmc:fabric-loader:${project.loader_version}")

tasks.register("readme") {
    group = "documentation"

    def input = file("README.md")

    def cf = file("READMECF.md");
    cf.write(input.getText("UTF-8").replace('${fabric_api_url}', "https://www.curseforge.com/minecraft/mc-mods/fabric-api"), "UTF-8")

    def mr = file("READMEMR.md");
    mr.write(input.getText("UTF-8").replace('${fabric_api_url}', "https://www.modrinth.com/mod/fabric-api"), "UTF-8")
}

tasks.register('publishMod') {
    group = "publishing"

    dependsOn "publishCurseForge"
    dependsOn "modrinth"
}


tasks.register('publishCurseForge', TaskPublishCurseForge) {
    disableVersionDetection()

    group = "publishing"
    apiToken = System.getenv("CURSEFORGE_UPLOAD");

    def mainFile = upload(1023420, remapJar)
    mainFile.changelog = changelog
    mainFile.addGameVersion("1.20.5")
    mainFile.displayName = "${mod_name} ${mod_version}"
    mainFile.addModLoader("Fabric")
    mainFile.releaseType = "release"
    mainFile.addJavaVersion(17);
    def fabricApi = "fabric-api"
    mainFile.addRequirement(fabricApi)
}

modrinth {
    token = System.getenv("MODRINTH_UPLOAD")
    projectId = project.mod_id
    versionName = project.mod_name + " " + project.mod_version
    versionNumber = project.mod_version
    versionType = "release"
    uploadFile = remapJar
    gameVersions = ["1.20.5"]
    loaders = ["fabric"]
    dependencies {
        required.project "fabric-api"
    }
}

loom {
    accessWidenerPath = file("src/main/resources/customdurability.accesswidener")
}

repositories {
    mavenLocal()
    maven {
        url = "https://api.modrinth.com/maven"
        name = "Modrinth"
        content {
            includeGroup("maven.modrinth")
        }
    }
    maven { url = "https://jitpack.io"	}
}

dependencies {
    modImplementation "net.fabricmc.fabric-api:fabric-api:$project.fabric_version"

    // Mixin Extras
    implementation("com.github.LlamaLad7:MixinExtras:0.1.1")
    annotationProcessor("com.github.LlamaLad7:MixinExtras:0.1.1")
    include("com.github.LlamaLad7:MixinExtras:0.1.1")
}

base {
    archivesName = project.mod_id
}

processResources  {
    def modProperties = [
            "mod_id": project.mod_id,
            "mod_name": project.mod_name,
            "mod_version": project.mod_version,
            "mod_description": project.mod_description,
            "mod_author": project.mod_author,
            "mod_sources": project.mod_sources,
            "mod_license": project.mod_license,
            "loader_version": project.loader_version,
            "minecraft_version": project.minecraft_version
    ]

    inputs.properties(modProperties)

    filesMatching("fabric.mod.json") {
        expand modProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {}
}